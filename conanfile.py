from conans import ConanFile, CMake, tools
import os

class NicegrafShadercMetadataParserConan(ConanFile):
    name = "nicegraf-shaderc-metadata-parser"
    version = "0.9.6"
    license = "MIT"
    url = "https://github.com/dBagrat/conan-nicegraf-shaderc.git"
    homepage = "https://github.com/nicebyte/nicegraf-shaderc"
    description = "nicegraf-shaderc-metadata-parser is a metadata parser for pipelines generated by nicegraf-shaderc"
    topics = ("nicegraf-shaderc", "utility", "metadata")
    settings = "os", "arch", "compiler", "build_type"
    options = {"shared": [True, False]}
    default_options = "shared=False"
    generators = "cmake"
    no_copy_source = True

    @property
    def _lib_name(self):
        return "metadata_parser"

    @property
    def _source_commit(self):
        return "1209d53178538c2063501c51a862e4666a2954d3"

    @property
    def _source_subfolder(self):
        return os.path.join(self.source_folder, self._lib_name)

    def source(self):
        tools.get(url="https://github.com/nicebyte/nicegraf-shaderc/archive/{}.zip".format(self._source_commit),
                  pattern="*/{}/*".format(self._lib_name),
                  strip_root=True)

    def configure(self):
        if self.settings.os == "Windows":
            del self.options.fPIC

    def build(self):
        cmake = CMake(self)
        cmake.configure(source_dir=self._source_subfolder)
        cmake.build()

    def package(self):
        libext = "lib" if self.settings.os=="Windows" else "a"

        self.copy("*{}.{}".format(self._lib_name, libext), dst="lib", keep_path=False)
        self.copy("*.h", dst="include", src=self._source_subfolder, keep_path=False)

    def package_info(self):
        self.cpp_info.libs = [self._lib_name]
