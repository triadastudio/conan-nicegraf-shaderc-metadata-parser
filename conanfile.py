from conan import ConanFile
from conan.tools import cmake, files

import os

class NiceshadeMetadataParserConan(ConanFile):
    name = "niceshade-metadata-parser"
    version = "1.3"
    license = "MIT"
    url = "https://github.com/dBagrat/conan-niceshade-metadata-parser.git"
    homepage = "https://github.com/nicebyte/niceshade"
    description = "Metadata parser for pipelines generated by niceshade"
    topics = ("niceshade", "utility", "metadata")
    settings = "os", "arch", "compiler", "build_type"
    options = {"shared": [True, False]}
    default_options = {"shared": False}
    no_copy_source = True

    @property
    def _lib_name(self):
        return "metadata-parser"

    @property
    def _source_commit(self):
        return "aea9d4b1b2f31d4362035f2a35f07d6d4e4bb411"

    @property
    def _source_subfolder(self):
        return os.path.join(self.source_folder, self._lib_name)

    def layout(self):
        cmake.cmake_layout(self)

    def source(self):
        files.get(self,
                  url="https://github.com/nicebyte/niceshade/archive/{}.zip".format(self._source_commit),
                  pattern="*/{}/*".format(self._lib_name),
                  strip_root=True)

    def generate(self):
        tc = cmake.CMakeToolchain(self)
        tc.generate()

    def build(self):
        cm = cmake.CMake(self)
        cm.configure(build_script_folder=self._source_subfolder)
        cm.build()

    def package(self):
        libext = "lib" if self.settings.os == "Windows" else "a"

        files.copy(self,
                   pattern="*{}.{}".format(self._lib_name, libext),
                   src=self.build_folder,
                   dst=os.path.join(self.package_folder, "lib"),
                   keep_path=False)

        files.copy(self,
                   "*.h",
                   dst=os.path.join(self.package_folder, "include"),
                   src=self._source_subfolder,
                   keep_path=False)

    def package_info(self):
        self.cpp_info.libs = [self._lib_name]
